<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAAEAAAABACAYAAACqaXHeAAAAIGNIUk0AAHomAACAhAAA+gAAAIDoAAB1
        MAAA6mAAADqYAAAXcJy6UTwAAAAHdElNRQfnCwYAKRosConGAAAENElEQVR4Xu1bS2gTURRNEXGh7Xxq
        RcUKKiK4UERBBb/gwv8HERXEHxj7ZhLBD7hw5UIFBTfiooi6UBQq2sy8WkGlUj8LQVARFEERRBFd+UVt
        1Xre9JYmk9ukTQeT1HfgMHTePffde+blZSZpYhoaGhoaGv89OiosIddbjrxsOv59y/EflBtN4V+3hL/f
        TjZXUVO9xLqGQaYjG5CkY0BQyBeWSNVSd/lhO/5uNlFZU7ZQe/mBJf+UT1LerEo2TqAWcwPB7WHxgKDw
        l1CLucGKBwBN4a2kFnODE+M11GaIpunlQNR7M7v+fhvg/6Thkgf2sEtM/doAbYA2QBugDaCQ3ODEoDaA
        hkse2gBtgDZAG8DUrw3QBmgD/hcDhL/JcPytlitn2ztTkyt3yom2m5o5LNlcQyG5wTRfVgb0G0zz2gBQ
        G0DDpY1k8xDL8Raj3pOW8G9hP3hmOfKV6ch72BwvYCPcUuk2VlM0j1Dj5WFAvH4wGo6jyXdM7SHKNtOV
        9TXO1ZGkzgQvKl0DjIQ/DvU9DtXbC8qPlvCWUZpu8MGlaUBVwpuB2j6Eau0Lf5mOl6B0nWCCFEvOgOHx
        K6Ow5N8wtfaR8jfyrKK05WJARwU2uLtMnQURBny2k81jgtRcAFhSBth1/lqmxgzCoK84bsRxPo559whT
        yNNBcm4QbLdFalExaNY1zQ0KSwN2/EdMjRlE46coXD0frOJiQvxlxeXYngwoImUr9RFAfc3Nx2USTR8j
        iXo+UKuAjUsn3h53wQDZxg0Wi2jkOPURAM0kubgwCzLAkdfUcnnCDRaNQu6hPgIoQ7g4nP+El8Y+W3jr
        FNH0FJLE1JNg13lDyG099Yjzz9UEDjdYLKpHW+ojADari1wc6j5AIXlhJuRUPof8guGOCvxxJjxYLKor
        1ll2J3Cvf56LA49QSF7gZT6H0YPyI4UEO+0SnDwDV25EQZU8e0KOsiVdBwNWU0kBsLSP9qBTe5d6CNqv
        aDjeQpKgl1Rt13nL9Q9itbzN1ger6ClJogeaucdNGmb1dq+SJCywAnZwujDRTJ83QbCRJNEjKgOqE95o
        xP0J68IsxADb9baTJHpEZYAC4m6HddmU5yg8ZrneBj6mmzDs+9C6KyNIEj2iNMBw5QJOG2I7mjqAeTfj
        +JoZz2D6iokEmHgFNp14N+ULbuIw1d1Yl0YVX+M0DKOUGcAVvszpCyGaf2eIJotS9x+m683jJiqIQh6i
        tBmw4g0GCo/iv1p/qI/QKW00UF9CMBMVypOUNgu4auNhwnNG0ytC+81wm9ZQuujwrwxQUEsXjVxldPn4
        0qjzplGaaGG6/nJmwgIpT1DanMAyXor4h9n6MOV7HPeqT5BJGj3UVUFBHiZif8zQB96xhT+L0vYK1cKb
        hA10H7RnsYleQ8OtnbfP8rC6H1C/h6BQDQ0NDQ0NjXTEYn8BzroOsTkTX9UAAAAASUVORK5CYII=
</value>
  </data>
</root>